{
  "Impact": "An attacker with access to the GoAhead Webserver can conduct a cross site scripting attack, which could be used to result in information leakage, privilege escalation, and/or denial of service.", 
  "CVSS_SecurityRequirementsIR": "", 
  "CVSS_EnvironmentalVector": "", 
  "Title": "GoAhead Webserver multiple stored XSS vulnerabilities", 
  "DateFirstPublished": "2011-10-10T08:06:23-04:00", 
  "CVSS_AccessVector": "", 
  "CAM_ScoreCurrentWidelyKnown": 5.346, 
  "IDNumber": "384427", 
  "SystemsAffectedPreamble": "The reporter was unable to confirm if any previous or newer versions are vulnerable to these stored cross site scripting (XSS) vulnerabilities.", 
  "CVSS_SecurityRequirementsCR": "", 
  "CVSS_Authenication": "", 
  "CVSS_BaseScore": "", 
  "CAM_EaseOfExploitation": "18", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "", 
  "Revision": 21, 
  "CVEIDs": "", 
  "VRDA_D1_DirectReport": "1", 
  "CAM_WidelyKnown": "0", 
  "CAM_Population": "4", 
  "Description": "GoAhead Webserver software fails to sanitize POST requests sent to the multiple functions. As a result, stored and reflective cross site scripting (XSS) attacks can be conducted. An attacker can inject javascript code that will be run each time the specified webpage is accessed by inserting javascript code in the affected parameter. According to the reporter the following webpages and parameters are affected by stored and reflective XSS vulnerabilities: Stored XSS in group parameter of addgroup.asp. POST /goform/AddGroup HTTP/1.1\ngroup=<script>alert(1337)</script>&privilege=4&method=1&enabled=on&ok=OK Results: \u00a0 Reflected XSS displayed in addgroup.asp, stored XSS in: adduser.asp, addlimit.asp, delgroup.asp. Stored XSS in url parameter of addlimit.asp POST /goform/AddAccessLimit HTTP/1.1\nurl=<script>alert(1337)</script>&group=test&method=3&ok=OK Results: Stored when user requests dellimit.asp. Stored XSS in adduser.asp, User ID parameter. Note: for this to work, there must be at least one valid group created in \naddgroup.asp. In this example, you can swap out the group=<script>alert(1337) \nfor whichever group name you added. \u00a0password= and passconf= can also be \nmodified to whichever password you want the new user to have. POST /goform/AddUser HTTP/1.1\nuser=%3Cscript%3Ealert%281337%29%3C%2Fscript%3E&group=%3Cscript%3Ealert%281337%2\n9%3C%2Fscript%3E&enabled=on&password=test&passconf=test&ok=OK Result: Reflected in reply, stored in: deluser.asp,dspuser.asp.", 
  "CVSS_AccessComplexity": "", 
  "CVSS_SecurityRequirementsAR": "", 
  "Resolution": "We are currently unaware of a practical solution to this problem.", 
  "Author": "This document was written by Michael Orlando.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2011-10-10T09:01:00-04:00", 
  "CVSS_IntegrityImpact": "", 
  "VRDA_D1_Population": "3", 
  "CVSS_TemporalVector": "", 
  "CVSS_ReportConfidence": "", 
  "CVSS_ConfidentialityImpact": "", 
  "CVSS_BaseVector": "", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "", 
  "ThanksAndCredit": "Thanks to Silent Dream for reporting this vulnerability.", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 10.206, 
  "CVSS_TemporalScore": "", 
  "VRDA_D1_Impact": "3", 
  "CVSS_TargetDistribution": "", 
  "CAM_InternetInfrastructure": "2", 
  "CVSS_RemediationLevel": "", 
  "Workarounds": "Restrict access As a general good security practice, only allow connections from trusted hosts and networks. Note that restricting access does not prevent XSS or CSRF attacks since the attack comes as an HTTP request from a legitimate user's host. Restricting access would prevent an attacker from accessing a GoAhead Webserver using stolen credentials from a blocked network location.", 
  "ID": "VU#384427", 
  "CVSS_AvailabilityImpact": "", 
  "CAM_ScoreCurrent": 0.486, 
  "Overview": "GoAhead Webserver 2.18 and possibly previous or newer versions, are vulnerable to multiple stored and reflective cross site scripting (XSS) vulnerabilities.", 
  "CAM_Impact": "9", 
  "DatePublic": "2011-10-10T00:00:00", 
  "DateCreated": "2011-09-15T14:57:17-04:00", 
  "References": "", 
  "Keywords": [
    "goahead", 
    "webserver", 
    "xss", 
    "post", 
    "csrf"
  ], 
  "CVSS_EnvironmentalScore": "", 
  "CAM_AttackerAccessRequired": "20"
}