{
  "Impact": "A remote unauthenticated attacker could obtain sensitive information, cause a denial of service condition or may be able to execute arbitrary code with the privileges of the web server.", 
  "CVSS_SecurityRequirementsIR": "ND", 
  "CVSS_EnvironmentalVector": "CDP:L/TD:H/CR:ND/IR:ND/AR:ND", 
  "Title": "PHP-CGI query string parameter vulnerability", 
  "DateFirstPublished": "2012-05-03T07:35:49-04:00", 
  "CVSS_AccessVector": "N", 
  "CAM_ScoreCurrentWidelyKnown": 0, 
  "IDNumber": "520827", 
  "SystemsAffectedPreamble": "According to PHP's website Apache+mod_php and nginx+php-fpm are not affected.", 
  "CVSS_SecurityRequirementsCR": "ND", 
  "CVSS_Authenication": "N", 
  "CVSS_BaseScore": 9, 
  "CAM_EaseOfExploitation": "0", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "L", 
  "Revision": 50, 
  "CVEIDs": [
    "CVE-2012-1823", 
    "CVE-2012-2311"
  ], 
  "VRDA_D1_DirectReport": "1", 
  "CAM_WidelyKnown": "0", 
  "CAM_Population": "0", 
  "Description": "According to PHP's website, \"PHP is a widely-used general-purpose scripting language that is especially suited for Web development and can be embedded into HTML.\" When PHP is used in a CGI-based setup (such as Apache's mod_cgid), the php-cgi receives a processed query string parameter as command line arguments which allows command-line switches, such as -s, -d or -c to be passed to the php-cgi binary, which can be exploited to disclose source code and obtain arbitrary code execution. An example of the -s command, allowing an attacker to view the source code of index.php is below: http://localhost/index.php?-s Additional information can be found in the vulnerability reporter's blog post.", 
  "CVSS_AccessComplexity": "L", 
  "CVSS_SecurityRequirementsAR": "ND", 
  "Resolution": "Apply update PHP has released version 5.4.3 and 5.3.13 to address this vulnerability. PHP is recommending that users upgrade to the latest version of PHP. PHP has stated, PHP 5.3.12/5.4.2 do not fix all variations of the CGI issues described in CVE-2012-1823. It has also come to our attention that some sites use an insecure cgiwrapper script to run PHP. These scripts will use $* instead of \"$@\" to pass parameters to php-cgi which causes a number of issues.", 
  "Author": "This document was written by Michael Orlando.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2013-12-01T23:32:00-05:00", 
  "CVSS_IntegrityImpact": "P", 
  "VRDA_D1_Population": "3", 
  "CVSS_TemporalVector": "E:F/RL:U/RC:C", 
  "CVSS_ReportConfidence": "C", 
  "CVSS_ConfidentialityImpact": "C", 
  "CVSS_BaseVector": "AV:N/AC:L/Au:N/C:C/I:P/A:P", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "F", 
  "ThanksAndCredit": "Thanks to De Eindbazen for reporting this vulnerability.", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 0, 
  "CVSS_TemporalScore": 8.5, 
  "VRDA_D1_Impact": "3", 
  "CVSS_TargetDistribution": "H", 
  "CAM_InternetInfrastructure": "0", 
  "CVSS_RemediationLevel": "U", 
  "Workarounds": "Apply mod_rewrite rule PHP has stated an alternative is to configure your web server to not let these types of requests with query strings starting with a \"-\" and not containing a \"=\" through. Adding a rule like this should not break any sites. For Apache using mod_rewrite it would look like this: RewriteCond %{QUERY_STRING} ^[^=]*$\n    RewriteCond %{QUERY_STRING} %2d|\\- [NC]\n    RewriteRule .? - [F,L]", 
  "ID": "VU#520827", 
  "CVSS_AvailabilityImpact": "P", 
  "CAM_ScoreCurrent": 0, 
  "Overview": "PHP-CGI-based setups contain a vulnerability when parsing query string parameters from php files.", 
  "CAM_Impact": "0", 
  "DatePublic": "2012-05-03T00:00:00", 
  "DateCreated": "2012-02-20T10:46:33-05:00", 
  "References": [
    "http://www.php.net/", 
    "http://www.php.net/manual/en/security.cgi-bin.php", 
    "http://eindbazen.net/2012/05/php-cgi-advisory-cve-2012-1823/", 
    "http://www.php.net/archive/2012.php#id2012-05-03-1", 
    "http://www.php.net/archive/2012.php#id2012-05-08-1", 
    "http://www.symantec.com/connect/blogs/linux-worm-targeting-hidden-devices"
  ], 
  "Keywords": [
    "php", 
    "php-cgi"
  ], 
  "CVSS_EnvironmentalScore": 8.670285804853, 
  "CAM_AttackerAccessRequired": "0"
}