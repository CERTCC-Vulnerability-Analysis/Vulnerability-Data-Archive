{
  "Impact": "The complete impact of this vulnerability is not yet known.", 
  "CVSS_SecurityRequirementsIR": "ND", 
  "CVSS_EnvironmentalVector": "CDP:ND/TD:M/CR:ND/IR:ND/AR:ND", 
  "Title": "Untangle NG Firewall contains multiple vulnerabilities", 
  "DateFirstPublished": "", 
  "CVSS_AccessVector": "A", 
  "CAM_ScoreCurrentWidelyKnown": 0, 
  "IDNumber": "538103", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "ND", 
  "CVSS_Authenication": "S", 
  "CVSS_BaseScore": 7.7, 
  "CAM_EaseOfExploitation": "0", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "ND", 
  "Revision": 7, 
  "CVEIDs": "", 
  "VRDA_D1_DirectReport": "1", 
  "CAM_WidelyKnown": "0", 
  "CAM_Population": "0", 
  "Description": "* Software/Product(s) containing the vulnerability: Untangle NG Firewall; the vulnerabilities have been confirmed from versions 11.2-12.0.1. Version \n12.0.1 is the most recent and the product is available here: https://forums.untangle.com/announcements/36831-ngfw-v12-0-1-available.html Given that this is a security product line, these vulnerabilities are severe. * Please describe the vulnerability: The vulnerabilities exist in the appliance's user interface (running as a web application on the \nappliance, accessible from the user-designated internal network). The discovered vulnerabilities \nallow authenticated users to execute commands with root privileges on the Untangle host. Exploiting \nthem allows lateral movement and privilege escalation. - Use of an intercepting proxy allows the attacker to execute arbitrary commands on the host of the \napplication, due to unsanitised input fields. The vulnerable fields are accessible from the \nNetwork->Troubleshooting window. The input field of every option is vulnerable. See attached archive for a screenshots. - Simply logging in and directly calling the vulnerable function invoked by the fields noted above \nallows command execution. This is due to the existence of a Python function which executes \narbitrary commands via a JSON call (the same function is utilised by the above fields). The \nfunction is named (and I am not kidding): Ung.Main.getExecManager().execEvil() See attached archive for exploit code. Both exploits allow an attacker to execute arbitrary commands, notably the ability to execute a \nSSL-encrypted reverse shell with root privileges.", 
  "CVSS_AccessComplexity": "L", 
  "CVSS_SecurityRequirementsAR": "ND", 
  "Resolution": "The CERT/CC is currently unaware of a practical solution to this problem.", 
  "Author": "This document was written by Garret Wassermann.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2016-06-15T17:17:00-04:00", 
  "CVSS_IntegrityImpact": "C", 
  "VRDA_D1_Population": "2", 
  "CVSS_TemporalVector": "E:POC/RL:U/RC:UR", 
  "CVSS_ReportConfidence": "UR", 
  "CVSS_ConfidentialityImpact": "C", 
  "CVSS_BaseVector": "AV:A/AC:L/Au:S/C:C/I:C/A:C", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "POC", 
  "ThanksAndCredit": "", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 0, 
  "CVSS_TemporalScore": 6.6, 
  "VRDA_D1_Impact": "2", 
  "CVSS_TargetDistribution": "M", 
  "CAM_InternetInfrastructure": "0", 
  "CVSS_RemediationLevel": "U", 
  "Workarounds": "", 
  "ID": "VU#538103", 
  "CVSS_AvailabilityImpact": "C", 
  "CAM_ScoreCurrent": 0, 
  "Overview": "", 
  "CAM_Impact": "0", 
  "DatePublic": "2016-06-27T00:00:00", 
  "DateCreated": "2016-05-02T11:06:16-04:00", 
  "References": "", 
  "Keywords": "", 
  "CVSS_EnvironmentalScore": 4.943037814848, 
  "CAM_AttackerAccessRequired": "0"
}