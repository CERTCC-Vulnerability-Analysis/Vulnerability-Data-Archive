{
  "Impact": "Kerb4 servers leak information (the realm and a list\nof users) such that a dictionary attack can be mounted\nagainst a kerberos server.", 
  "CVSS_SecurityRequirementsIR": "", 
  "CVSS_EnvironmentalVector": "", 
  "Title": "Kerberos4/dictionary_attack", 
  "DateFirstPublished": "", 
  "CVSS_AccessVector": "", 
  "CAM_ScoreCurrentWidelyKnown": 0, 
  "IDNumber": "16437", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "", 
  "CVSS_Authenication": "", 
  "CVSS_BaseScore": "", 
  "CAM_EaseOfExploitation": "0", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "", 
  "Revision": "1", 
  "CVEIDs": "", 
  "VRDA_D1_DirectReport": "", 
  "CAM_WidelyKnown": "0", 
  "CAM_Population": "0", 
  "Description": "It has long been known that Kerberos 4 Ticket Granting Tickets are\nsusceptible to dictionary attacks as they contain a constant string\nthat can be used for compares (the string happens to be \"krbtgt\"). Thus\nit has always been possible to; query a Kerberos server, hand in a\nvalid principle (user and kerberos realm), recieve a Ticket Granting\nTicket, decrypt the DES ticket using dictionary words for the key, if\nthe phrase \"krbtgt\" exists in the decrypted packet you have the correct\nkey. This exact attack has been going on for some time in certain\ncircles. In particular it seems to work quite well on dialup servers\nusing kerberos for password authentication.\n\nThe problem with the above is the need for a userlist and the kerberos\nrealm name in order to mount the attack. If the site is running\nkerberos it might be that they have a clue and are at least slightly\nsecurity conscious so there is a strong possibility that they have\nservices like finger and rusers turned off to the outside world.  You\ncould sniff incoming and outgoing e-mail for usernames or do a little\nsocial engineering but lo-and-behold there's a much easier way. And\nguess what -- due to the herculean effort that is required to setup\nKerberos people want to get the most mileage out of it once it is in\nplace. This includes leaving it open through filters and firewalls to\nallow outside users to authenticate and come in. Naughty Naughty\nNaughty!\n\nIt turns out that upon receiving a malformed UDP packet the kerberos4\nserver returns a packet containing an error string and the principle\nfrom some un-sanitized data structures. A perfect example is a udp\npacket containing a null. Since you are not handing in as much data as\nit is expecting the pointer to the re-used structure references the\nun-purged principle information. This un-sanitized data contains the\nname of the last user to request a TGT and the kerberos Realm name.\nNeedless to say, this is all the information you need to then request a\ntgt for that user and dictionary attack the response. Welcome to the\nworld of 'buffer underflows'.\n\nWhat our program does is builds up a linked list of principle structures.\nIt repeatedly queries the Kerberos server and updates the list each time a\nnew user has gone through. It then constructs a valid TGT request for the\nlast user it saw and requests their TGT, proceeding to crack upon it.\n\nThis data leak does not exist in kerberos5 nor does it seem to be in kerb5\nrunning in kerb4 compatibility mode. Unfortunately many sites still use\nkerb4 due to their legacy systems and the incompatibillity between\nthe two versions. OpenBSD is the only OS distribution that I am aware\nof that already has this problem fixed.", 
  "CVSS_AccessComplexity": "", 
  "CVSS_SecurityRequirementsAR": "", 
  "Resolution": "", 
  "Author": "This document was written by Jeff S Havrilla.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "1999-02-14T16:02:20-05:00", 
  "CVSS_IntegrityImpact": "", 
  "VRDA_D1_Population": "", 
  "CVSS_TemporalVector": "", 
  "CVSS_ReportConfidence": "", 
  "CVSS_ConfidentialityImpact": "", 
  "CVSS_BaseVector": "", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "", 
  "ThanksAndCredit": "", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 0, 
  "CVSS_TemporalScore": "", 
  "VRDA_D1_Impact": "", 
  "CVSS_TargetDistribution": "", 
  "CAM_InternetInfrastructure": "0", 
  "CVSS_RemediationLevel": "", 
  "Workarounds": "The patch given in 97.5849 only means that the intruder has\nto know the realm name and a list of users in advance.", 
  "ID": "VU#16437", 
  "CVSS_AvailabilityImpact": "", 
  "CAM_ScoreCurrent": 0, 
  "Overview": "", 
  "CAM_Impact": "0", 
  "DatePublic": "", 
  "DateCreated": "1998-05-21T11:46:40-04:00", 
  "References": "http://www.l0pht.com/advisories/krb_adv.html", 
  "Keywords": [
    "kerberos", 
    "password cracking"
  ], 
  "CVSS_EnvironmentalScore": "", 
  "CAM_AttackerAccessRequired": "0"
}