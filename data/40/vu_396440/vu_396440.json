{
  "Impact": "By causing a server to parse a specially crafted X.509 certificate, a remote, unauthenticated attacker may be able to create a denial of service condition or execute arbitrary code in the context of the SSL stack.", 
  "CVSS_SecurityRequirementsIR": "ND", 
  "CVSS_EnvironmentalVector": "CDP:ND/TD:M/CR:ND/IR:ND/AR:ND", 
  "Title": "MatrixSSL contains multiple vulnerabilities", 
  "DateFirstPublished": "2016-10-11T11:49:37-04:00", 
  "CVSS_AccessVector": "N", 
  "CAM_ScoreCurrentWidelyKnown": 0, 
  "IDNumber": "396440", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "ND", 
  "CVSS_Authenication": "N", 
  "CVSS_BaseScore": 10, 
  "CAM_EaseOfExploitation": "0", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "ND", 
  "Revision": 20, 
  "CVEIDs": [
    "CVE-2016-6890", 
    "CVE-2016-6891", 
    "CVE-2016-6892"
  ], 
  "VRDA_D1_DirectReport": "1", 
  "CAM_WidelyKnown": "0", 
  "CAM_Population": "0", 
  "Description": "CWE-122: Heap-based Buffer Overflow - CVE-2016-6890 The Subject Alt Name field of X.509 certificates is not properly parsed. A specially crafted certificate may result in a heap-based buffer overflow and arbitrary code execution. CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer - CVE-2016-6891 The ASN.1 Bit Field is not properly parsed. A specially crafted certificate may lead to a denial of service condition due to an out of bounds read in memory. CWE-590: Free of Memory not on the Heap - CVE-2016-6892 The x509FreeExtensions() function does not properly parse X.509 certificates. A specially crafted certificate may cause a free operation on unallocated memory, resulting in a denial of service condition. The CVSS score below describes CVE-2016-6890. For more information about these vulnerabilities, contact the vendor at support@matrixssl.com or refer to the vendor release notes and the researcher's blog.", 
  "CVSS_AccessComplexity": "L", 
  "CVSS_SecurityRequirementsAR": "ND", 
  "Resolution": "Apply an update The vendor has released version 3.8.6 to address these issues. Developers of embedded devices using MatrixSSL should provide firmware updates implementing the fix. Users in general should update to the latest release.", 
  "Author": "This document was written by Joel Land.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2016-10-14T09:05:00-04:00", 
  "CVSS_IntegrityImpact": "C", 
  "VRDA_D1_Population": "2", 
  "CVSS_TemporalVector": "E:POC/RL:OF/RC:C", 
  "CVSS_ReportConfidence": "C", 
  "CVSS_ConfidentialityImpact": "C", 
  "CVSS_BaseVector": "AV:N/AC:L/Au:N/C:C/I:C/A:C", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "POC", 
  "ThanksAndCredit": "Thanks to Craig Young of Tripwire for reporting these vulnerabilities.", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 0, 
  "CVSS_TemporalScore": 7.8, 
  "VRDA_D1_Impact": "4", 
  "CVSS_TargetDistribution": "M", 
  "CAM_InternetInfrastructure": "0", 
  "CVSS_RemediationLevel": "OF", 
  "Workarounds": "", 
  "ID": "VU#396440", 
  "CVSS_AvailabilityImpact": "C", 
  "CAM_ScoreCurrent": 0, 
  "Overview": "MatrixSSL, version 3.8.5 and earlier, contains heap overflow, out-of-bounds read, and unallocated memory free operation vulnerabilities.", 
  "CAM_Impact": "0", 
  "DatePublic": "2016-10-10T00:00:00", 
  "DateCreated": "2016-08-26T08:13:51-04:00", 
  "References": [
    "https://github.com/matrixssl/matrixssl/blob/master/CHANGES.md", 
    "http://www.tripwire.com/state-of-security/security-data-protection/cyber-security/flawed-matrixssl-code-highlights-need-for-better-iot-update-practices/", 
    "http://www.matrixssl.org/blog/releases/matrixssl_3_8_6", 
    "https://cwe.mitre.org/data/definitions/122.html", 
    "https://cwe.mitre.org/data/definitions/119.html", 
    "https://cwe.mitre.org/data/definitions/590.html"
  ], 
  "Keywords": [
    "matrixssl", 
    "heap-based buffer overflow", 
    "out-of-bounds read", 
    "unallocated memory free"
  ], 
  "CVSS_EnvironmentalScore": 5.86926702432, 
  "CAM_AttackerAccessRequired": "0"
}