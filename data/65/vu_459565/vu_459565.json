{
  "Impact": "An attacker could inject arbitrary SQL queries, such as resetting the administrator password.", 
  "CVSS_SecurityRequirementsIR": "", 
  "CVSS_EnvironmentalVector": "", 
  "Title": "paFileDB fails to properly sanitize \"query\" parameter in \"pafiledb.php\"", 
  "DateFirstPublished": "2005-06-21T17:56:11-04:00", 
  "CVSS_AccessVector": "", 
  "CAM_ScoreCurrentWidelyKnown": 1.035, 
  "IDNumber": "459565", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "", 
  "CVSS_Authenication": "", 
  "CVSS_BaseScore": "", 
  "CAM_EaseOfExploitation": "20", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "", 
  "Revision": 13, 
  "CVEIDs": "", 
  "VRDA_D1_DirectReport": "", 
  "CAM_WidelyKnown": "18", 
  "CAM_Population": "1", 
  "Description": "", 
  "CVSS_AccessComplexity": "", 
  "CVSS_SecurityRequirementsAR": "", 
  "Resolution": "Upgrade to a version 3.1 downloaded after June 15, 2005 of the paFileDB distribution as it contains a fix for this specific vulnerability and a number of other security enhancements for initializing variable before use and sanitising user input. Full code review and rewriting to remove the dependency on all passed parameters being in the global address space is also recommended. The current release as downloaded on 21 June, 2005 still contains the code to put all parameters into the global address space (see above).", 
  "Author": "This document was written by Robert Mead.", 
  "CAM_Exploitation": "1", 
  "DateLastUpdated": "2005-07-07T16:36:00-04:00", 
  "CVSS_IntegrityImpact": "", 
  "VRDA_D1_Population": "", 
  "CVSS_TemporalVector": "", 
  "CVSS_ReportConfidence": "", 
  "CVSS_ConfidentialityImpact": "", 
  "CVSS_BaseVector": "", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "", 
  "ThanksAndCredit": "James Bercegay of the GulfTech Security Research Team is credited with discovering this vulnerability.", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 1.89, 
  "CVSS_TemporalScore": "", 
  "VRDA_D1_Impact": "", 
  "CVSS_TargetDistribution": "", 
  "CAM_InternetInfrastructure": "2", 
  "CVSS_RemediationLevel": "", 
  "Workarounds": "Workaround\nRestrict access to the paFile application to only trusted users. Restricting access can be achieved through network filtering and restricting access to internal users, and/or through web server access control mechanisms.", 
  "ID": "VU#459565", 
  "CVSS_AvailabilityImpact": "", 
  "CAM_ScoreCurrent": 0.945, 
  "Overview": "paFileDB works around the default \"off\" state for the \"register_globals\" security directive in PHP and then fails to initialize the \"query\" variable, which can be used to inject arbitrary SQL queries.", 
  "CAM_Impact": "12", 
  "DatePublic": "2005-06-14T00:00:00", 
  "DateCreated": "2005-06-15T16:07:17-04:00", 
  "References": [
    "http://www.gulftech.org/?node=research&article_id=00082-06142005", 
    "http://www.php.net/register_globals/"
  ], 
  "Keywords": [
    "paFileDB", 
    "properly sanitize", 
    "SQL injection", 
    "query parameter", 
    "pafiledb.php", 
    "register_globals", 
    "PHP"
  ], 
  "CVSS_EnvironmentalScore": "", 
  "CAM_AttackerAccessRequired": "10"
}