{
  "Impact": "Using a specially crafted Browser Election message, an attacker may be able to cause a Denial of Service (DoS) or execute arbitrary code.", 
  "CVSS_SecurityRequirementsIR": "", 
  "CVSS_EnvironmentalVector": "", 
  "Title": "Microsoft Windows browser election message kernel pool overflow", 
  "DateFirstPublished": "2011-02-16T11:16:00-05:00", 
  "CVSS_AccessVector": "", 
  "CAM_ScoreCurrentWidelyKnown": 18.73125, 
  "IDNumber": "323172", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "", 
  "CVSS_Authenication": "", 
  "CVSS_BaseScore": "", 
  "CAM_EaseOfExploitation": "10", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "", 
  "Revision": 18, 
  "CVEIDs": "", 
  "VRDA_D1_DirectReport": "0", 
  "CAM_WidelyKnown": "20", 
  "CAM_Population": "15", 
  "Description": "From Description of the Microsoft Computer Browser Service: \"The browser service maintains a list of the domain name or workgroup name the computer is in, and the protocol being used for each computer on the network segment being served by the computer running the browser service. On each network segment, a master browser is elected from the group of computers located on the segment that are running the browser service.\" The computer browser service protocol driver contains an integer underflow error in browser election message handling, which can cause a kernel pool buffer overrun resulting in memory corruption. The vulnerable code is only reached if the computer is the Master Browser. However, according to the Microsoft Security Research and Defense blog, the election of the Master Browser varies depending on network configuration: \"In normal enterprise networks the Primary Domain Controller (PDC) will become Master Browser, but depending on the network configuration, other computers on the network can become Master Browser, and therefore be vulnerable. A single system will be Master Browser at any point in time.\" For more information, please see Microsoft Security Bulletin MS11-019.", 
  "CVSS_AccessComplexity": "", 
  "CVSS_SecurityRequirementsAR": "", 
  "Resolution": "Apply an update\nMicrosoft addresses this vulnerability with the updates listed in Microsoft Security Bulletin MS11-19.", 
  "Author": "This document was written by David Warren.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2011-04-15T10:05:00-04:00", 
  "CVSS_IntegrityImpact": "", 
  "VRDA_D1_Population": "4", 
  "CVSS_TemporalVector": "", 
  "CVSS_ReportConfidence": "", 
  "CVSS_ConfidentialityImpact": "", 
  "CVSS_BaseVector": "", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "", 
  "ThanksAndCredit": "", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 28.85625, 
  "CVSS_TemporalScore": "", 
  "VRDA_D1_Impact": "4", 
  "CVSS_TargetDistribution": "", 
  "CAM_InternetInfrastructure": "17", 
  "CVSS_RemediationLevel": "", 
  "Workarounds": "Restrict Access Restrict access to the server's broadcast domain and block UDP ports 137, 138 and TCP ports 139, 445 at the network perimeter using firewall rules.", 
  "ID": "VU#323172", 
  "CVSS_AvailabilityImpact": "", 
  "CAM_ScoreCurrent": 18.73125, 
  "Overview": "A vulnerability exists in the way the Microsoft Windows browser service handles Browser Election messages.", 
  "CAM_Impact": "18", 
  "DatePublic": "2011-02-14T00:00:00", 
  "DateCreated": "2011-02-15T13:00:03-05:00", 
  "References": [
    "http://www.microsoft.com/technet/security/bulletin/MS11-019.mspx", 
    "http://blogs.technet.com/b/mmpc/archive/2011/02/16/my-sweet-valentine-the-cifs-browser-protocol-heap-corruption-vulnerability.aspx", 
    "http://blogs.technet.com/b/srd/archive/2011/02/16/notes-on-exploitability-of-the-recent-windows-browser-protocol-issue.aspx", 
    "http://lists.grok.org.uk/pipermail/full-disclosure/2011-February/079189.html"
  ], 
  "Keywords": [
    "windows", 
    "smb", 
    "browser election", 
    "browser", 
    "heap overflow"
  ], 
  "CVSS_EnvironmentalScore": "", 
  "CAM_AttackerAccessRequired": "10"
}