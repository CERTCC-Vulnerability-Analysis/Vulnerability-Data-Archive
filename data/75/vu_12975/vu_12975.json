{
  "Impact": "Local user can crash machine", 
  "CVSS_SecurityRequirementsIR": "", 
  "CVSS_EnvironmentalVector": "", 
  "Title": "BSD_kernel_panic", 
  "DateFirstPublished": "", 
  "CVSS_AccessVector": "", 
  "CAM_ScoreCurrentWidelyKnown": 6.75, 
  "IDNumber": "12975", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "", 
  "CVSS_Authenication": "", 
  "CVSS_BaseScore": "", 
  "CAM_EaseOfExploitation": "10", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "", 
  "Revision": 2, 
  "CVEIDs": "", 
  "VRDA_D1_DirectReport": "", 
  "CAM_WidelyKnown": "1", 
  "CAM_Population": "20", 
  "Description": "Email from Dave Borman (<dab@BSDI.COM>)\n\n> I was running a test program and wrote 1 byte to a TCP socket\n> with the MSG_EOR flag specified (using send()) and this caused\n> BSD/OS 3.0 to reboot.  The client and server were both on this\n> same host.  Nothing was output to the console or to the\n> /var/log/messages file.  I was running as a normal user,\n> without superuser privileges.\n\nThe panic was \"m_copydata\".  The problem is that when you\nset MSG_EOR, it sets the M_EOR flag in the mbuf chain.  When\nsbappend() is called, if it finds M_EOR at the end of the\nsocket buffer, it calls sbappendrecord(), which links the\nnew data in via the m_nextpkt field.  Later in tcp_output(),\nbecause we're dealing with a small amount of data, we call\nm_copydata().  The problem is that m_copydata() doesn't know\nanything about m_nextpkt, so it thinks that it got to the end\nof the socket buffer before it had copied the requested amount\nof data, and it panics.", 
  "CVSS_AccessComplexity": "", 
  "CVSS_SecurityRequirementsAR": "", 
  "Resolution": "", 
  "Author": "This document was written by James T Ellis.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2003-09-22T17:32:00-04:00", 
  "CVSS_IntegrityImpact": "", 
  "VRDA_D1_Population": "", 
  "CVSS_TemporalVector": "", 
  "CVSS_ReportConfidence": "", 
  "CVSS_ConfidentialityImpact": "", 
  "CVSS_BaseVector": "", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "", 
  "ThanksAndCredit": "", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 11.25, 
  "CVSS_TemporalScore": "", 
  "VRDA_D1_Impact": "", 
  "CVSS_TargetDistribution": "", 
  "CAM_InternetInfrastructure": "10", 
  "CVSS_RemediationLevel": "", 
  "Workarounds": "From Dave Borman,\nMy fix is not to educate m_copydata() about m_nextpkt, but\ninstead to clear M_EOR from the mbuf in tcp_usrreq(), just\nbefore calling sbappend() (for both PRU_SEND and PRU_SENDOOB).", 
  "ID": "VU#12975", 
  "CVSS_AvailabilityImpact": "", 
  "CAM_ScoreCurrent": 2.475, 
  "Overview": "", 
  "CAM_Impact": "6", 
  "DatePublic": "", 
  "DateCreated": "1999-01-05T17:27:56-05:00", 
  "References": "", 
  "Keywords": [
    "MSG_EOR", 
    "IP", 
    "crash", 
    "DoS", 
    "send", 
    "m_copydata", 
    "m_nextpkt"
  ], 
  "CVSS_EnvironmentalScore": "", 
  "CAM_AttackerAccessRequired": "10"
}