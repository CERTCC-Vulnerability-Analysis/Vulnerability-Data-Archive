{
  "Impact": "A remote user may gain administrative access to the search engine. On some systems this may lead to access to a privileged account in the operating system.", 
  "CVSS_SecurityRequirementsIR": "", 
  "CVSS_EnvironmentalVector": "", 
  "Title": "Multiple QUERY_STRING parameters in Inktomi Search Engine (UltraSeek) have insufficient input validation", 
  "DateFirstPublished": "", 
  "CVSS_AccessVector": "", 
  "CAM_ScoreCurrentWidelyKnown": 51.3, 
  "IDNumber": "685787", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "", 
  "CVSS_Authenication": "", 
  "CVSS_BaseScore": "", 
  "CAM_EaseOfExploitation": "16", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "", 
  "Revision": 12, 
  "CVEIDs": "", 
  "VRDA_D1_DirectReport": "", 
  "CAM_WidelyKnown": "10", 
  "CAM_Population": "15", 
  "Description": "", 
  "CVSS_AccessComplexity": "", 
  "CVSS_SecurityRequirementsAR": "", 
  "Resolution": "Upgrade to Inktomi Search Engine 4.0.1 or greater.", 
  "Author": "This document was written by Jeffrey S. Havrilla", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2003-10-06T10:30:00-04:00", 
  "CVSS_IntegrityImpact": "", 
  "VRDA_D1_Population": "", 
  "CVSS_TemporalVector": "", 
  "CVSS_ReportConfidence": "", 
  "CVSS_ConfidentialityImpact": "", 
  "CVSS_BaseVector": "", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "", 
  "ThanksAndCredit": "atsake has been credited for re-discovering this vulnerability. It was originally fixed in UltraSeek 4.0.1 in November 2000.", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 85.5, 
  "CVSS_TemporalScore": "", 
  "VRDA_D1_Impact": "", 
  "CVSS_TargetDistribution": "", 
  "CAM_InternetInfrastructure": "10", 
  "CVSS_RemediationLevel": "", 
  "Workarounds": "The best fix is to upgrade, and re-customize the HTML pages based on the latest product pages. Here are two changes to address this specific problem. In query.html, change: if query.has_key(\"lk\"): lk = query[\"lk\"][0]\nelse: lk = config.default_lk to: if query.has_key(\"lk\"): lk = str(self.atoi(query[\"lk\"][0]))\nelse: lk = config.default_lk This will force an error if \"lk\" is not a number. Also in query.html, add a line, like this. Original: if query.has_key(\"ql\"): ql = query[\"ql\"][0]\nelse: ql = config.default_ql new: if query.has_key(\"ql\"): ql = query[\"ql\"][0]\nelse: ql = config.default_ql\nif ql not in (\"\",\"a\"): ql = \"\" This will force \"ql\" to be a legal value.", 
  "ID": "VU#685787", 
  "CVSS_AvailabilityImpact": "", 
  "CAM_ScoreCurrent": 34.2, 
  "Overview": "Versions of the Verity UltraSeek search engine (formerlly known as Inktomi Enterprise Search or Inktomi InfoSeek)  allows arbitrary text to be inserted in an advanced search query string. This may lead to administrative access by remote users which may lead to increased privileges within the running operating system.", 
  "CAM_Impact": "19", 
  "DatePublic": "", 
  "DateCreated": "2001-06-29T15:56:53-04:00", 
  "References": "", 
  "Keywords": [
    "ultraseek", 
    "inktomi", 
    "infoseek", 
    "python", 
    "QUERY_STRING", 
    "la", 
    "lk", 
    "ql", 
    "hits.html", 
    "query.html"
  ], 
  "CVSS_EnvironmentalScore": "", 
  "CAM_AttackerAccessRequired": "20"
}