{
  "Impact": "A remote, unauthenticated attacker may be able to conduct MITM attacks on internal server subrequests or direct the server to initiate connections to arbitrary hosts.", 
  "CVSS_SecurityRequirementsIR": "ND", 
  "CVSS_EnvironmentalVector": "CDP:ND/TD:L/CR:ND/IR:ND/AR:ND", 
  "Title": "CGI web servers assign Proxy header values from client requests to internal HTTP_PROXY environment variables", 
  "DateFirstPublished": "2016-07-18T10:01:17-04:00", 
  "CVSS_AccessVector": "N", 
  "CAM_ScoreCurrentWidelyKnown": 0, 
  "IDNumber": "797896", 
  "SystemsAffectedPreamble": "", 
  "CVSS_SecurityRequirementsCR": "ND", 
  "CVSS_Authenication": "N", 
  "CVSS_BaseScore": 5.1, 
  "CAM_EaseOfExploitation": "0", 
  "IPProtocol": "", 
  "CERTAdvisory": "", 
  "CVSS_CollateralDamagePotential": "ND", 
  "Revision": 66, 
  "CVEIDs": [
    "CVE-2016-5385", 
    "CVE-2016-5386", 
    "CVE-2016-5387", 
    "CVE-2016-5388", 
    "CVE-2016-1000109", 
    "CVE-2016-1000110"
  ], 
  "VRDA_D1_DirectReport": "1", 
  "CAM_WidelyKnown": "0", 
  "CAM_Population": "0", 
  "Description": "CWE-807: Reliance on Untrusted Inputs in a Security Decision, CWE-454: External Initialization of Trusted Variables or Data Stores Web servers running in a CGI or CGI-like context may assign client request Proxy header values to internal HTTP_PROXY environment variables. The vulnerable behavior is the result of a naming convention for meta-variables, defined in RFC 3876, which leads to a name collision: \"The HTTP header field name is converted to upper case, has all occurrences of \"-\" replaced with \"_\" and has \"HTTP_\" prepended to give the meta-variable name.\" According to the researchers, a web server is vulnerable if: A web server, programming language or framework (and in some limited situations the application itself) sets the environmental variable HTTP_PROXY from the user supplied Proxy header in the web request, or sets a similarly used variable (essentially when the request header turns from harmless data into a potentially harmful environmental variable). A web application makes use of HTTP_PROXY or similar variable unsafely (e.g. fails to check the request type) resulting in an attacker controlled proxy being used (essentially when HTTP_PROXY is actually used unsafely). By sending a specially crafted request to a vulnerable server, a remote, unauthenticated attacker may be able to conduct MITM attacks on internal server subrequests or direct the server to initiate connections to arbitrary hosts. For more information, refer to httpoxy.org.", 
  "CVSS_AccessComplexity": "H", 
  "CVSS_SecurityRequirementsAR": "ND", 
  "Resolution": "Apply an update Where applicable, affected products and components should be updated to address this vulnerability. Check with vendors for information about patching. Where patches are unavailable or updating is not an option, consider the following workarounds.", 
  "Author": "This document was written by Joel Land.", 
  "CAM_Exploitation": "0", 
  "DateLastUpdated": "2016-07-19T14:58:00-04:00", 
  "CVSS_IntegrityImpact": "P", 
  "VRDA_D1_Population": "3", 
  "CVSS_TemporalVector": "E:POC/RL:ND/RC:C", 
  "CVSS_ReportConfidence": "C", 
  "CVSS_ConfidentialityImpact": "P", 
  "CVSS_BaseVector": "AV:N/AC:H/Au:N/C:P/I:P/A:P", 
  "VulnerabilityCount": 1, 
  "CVSS_Exploitability": "POC", 
  "ThanksAndCredit": "Thanks to Dominic Scheirlinck and Scott Geary of Vend for reporting this vulnerability.", 
  "US-CERTTechnicalAlert": "", 
  "CAM_ScoreCurrentWidelyKnownExploited": 0, 
  "CVSS_TemporalScore": 4.6, 
  "VRDA_D1_Impact": "2", 
  "CVSS_TargetDistribution": "L", 
  "CAM_InternetInfrastructure": "0", 
  "CVSS_RemediationLevel": "ND", 
  "Workarounds": "Filter Proxy request headers The researchers and community have identified several filtering strategies that are product-dependent: Apache/CGI In this configuration, any language may be vulnerable (the HTTP_PROXY env var is \"real\"). If you are using mod_headers , you can unset the \"Proxy\" header with this directive: RequestHeader unset Proxy If you are using mod_security, you can use a rule like (vary the action to taste): SecRuleEngine On\n    SecRule &REQUEST_HEADERS:Proxy \"@gt 0\"\n    \"id:1000005,log,deny,msg:'httpoxy denied'\" Refer to Apache's response for more information. HAProxy httprequest delheader Proxy lighttpd <= 1.4.40 (reject requests containing \"Proxy\" header) Create \"/path/to/deny-proxy.lua\", read-only to lighttpd, with content: if (lighty.request[\"Proxy\"] == nil) then return 0 else return 403 end Modify lighttpd.conf to load mod_magnet and run lua code server.modules += ( \"mod_magnet\" )\n    magnet.attract-raw-url-to = ( \"/path/to/deny-proxy.lua\" ) lighttpd2 (development) (strip \"Proxy\" header from request) Add to lighttpd.conf: req_header.remove \"Proxy\"; Nginx/FastCGI Use this to block the Proxy header from being passed on to PHPFPM, PHPPM, etc. fastcgi_param HTTP_PROXY \"\"; Nginx with proxy_pass The following setting should work for people who are using \"proxy_pass\" with nginx: proxy_set_header Proxy \"\"; Microsoft has provided the following guidance for IIS servers utilizing affected third-party frameworks: Microsoft IIS Mitigation steps: Update apphost.config with the following rule: <system.webServer> <rewrite> <rules> <rule name=3D\"Erase HTTP_PROXY\" patternSyntax=3D\"Wildcard\"> <match url=3D\"*.*\" /> <serverVariables> <set name=3D\"HTTP_PROXY\" value=3D\"\" /> </serverVariables> <action type=3D\"None\" /> </rule> </rules> </rewrite> </system.webServer>", 
  "ID": "VU#797896", 
  "CVSS_AvailabilityImpact": "P", 
  "CAM_ScoreCurrent": 0, 
  "Overview": "Web servers running in a CGI or CGI-like context may assign client request Proxy header values to internal HTTP_PROXY environment variables. This vulnerability can be leveraged to conduct man-in-the-middle (MITM) attacks on internal subrequests or to direct the server to initiate connections to arbitrary hosts.", 
  "CAM_Impact": "0", 
  "DatePublic": "2016-07-18T00:00:00", 
  "DateCreated": "2016-07-11T16:13:16-04:00", 
  "References": [
    "https://tools.ietf.org/html/rfc3875", 
    "https://httpoxy.org", 
    "https://www.apache.org/security/asf-httpoxy-response.txt", 
    "https://cwe.mitre.org/data/definitions/807.html", 
    "https://cwe.mitre.org/data/definitions/454.html"
  ], 
  "Keywords": [
    "cgi", 
    "web server", 
    "proxy", 
    "environment", 
    "mitm", 
    "man in the middle"
  ], 
  "CVSS_EnvironmentalScore": 1.14756650386875, 
  "CAM_AttackerAccessRequired": "0"
}